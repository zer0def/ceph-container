commit 5b7357a042ea3ac779915e22c562f10b1db21102
Author: zer0def <zer0def@zer0def.0>
Date:   Sat Nov 23 20:02:26 2024 +0100

    alpine iteration

diff --git a/src/cephadm/cephadm.py b/src/cephadm/cephadm.py
index 6854fa22b23..07a987f3ff2 100755
--- a/src/cephadm/cephadm.py
+++ b/src/cephadm/cephadm.py
@@ -4439,14 +4439,15 @@ def _rm_cluster(ctx: CephadmContext, keep_logs: bool, zap_osds: bool) -> None:
 def check_time_sync(ctx, enabler=None):
     # type: (CephadmContext, Optional[Packager]) -> bool
     units = [
-        'chrony.service',  # 18.04 (at least)
-        'chronyd.service',  # el / opensuse
+        'chrony.service', 'chrony',   # 18.04 (at least)
+        'chronyd.service', 'chronyd',  # el / opensuse
         'systemd-timesyncd.service',
-        'ntpd.service',  # el7 (at least)
-        'ntp.service',  # 18.04 (at least)
-        'ntpsec.service',  # 20.04 (at least) / buster
-        'openntpd.service',  # ubuntu / debian
-        'timemaster.service',  # linuxptp on ubuntu/debian
+        'systemd-timesyncd',
+        'ntpd.service', 'ntpd',  # el7 (at least)
+        'ntp.service', 'ntp',  # 18.04 (at least)
+        'ntpsec.service', 'ntpsec',  # 20.04 (at least) / buster
+        'openntpd.service', 'openntpd',  # ubuntu / debian
+        'timemaster.service', 'timemaster',  # linuxptp on ubuntu/debian
     ]
     if not check_units(ctx, units, enabler):
         logger.warning('No time sync service is running; checked for %s' % units)
diff --git a/src/cephadm/cephadmlib/packagers.py b/src/cephadm/cephadmlib/packagers.py
index 9187b718411..c714d4a0b92 100644
--- a/src/cephadm/cephadmlib/packagers.py
+++ b/src/cephadm/cephadmlib/packagers.py
@@ -570,6 +570,48 @@ class Zypper(Packager):
         self.install(['podman'])
 
 
+class Apk(Packager):
+    DISTRO_NAMES = ['alpine']
+
+    def __init__(
+        self,
+        ctx: CephadmContext,
+        stable: Optional[str],
+        version: Optional[str],
+        branch: Optional[str],
+        commit: Optional[str],
+        distro: Optional[str],
+        distro_version: Optional[str],
+    ) -> None:
+        super(Apk, self).__init__(
+            ctx, stable=stable, version=version, branch=branch, commit=commit
+        )
+        assert distro
+        assert distro_version
+        self.ctx = ctx
+        self.distro = distro
+        self.distro_version = distro_version
+
+    def install(self, ls: List[str]) -> None:
+        logger.info('Installing packages %s...' % ls)
+        call_throws(self.ctx, ['apk', 'add', '--no-cache'] + ls)
+
+    def install_podman(self) -> None:
+        self.install(['podman'])
+
+    # technically not true, needs record additions in /etc/apk/repositories
+    def add_repo(self) -> None:
+        return
+
+    def rm_repo(self) -> None:
+        return
+
+    # slightly presumptive that alpine always runs openrc init
+    def enable_service(self, service: str) -> None:
+        call_throws(self.ctx, ['rc-update', 'add', service])
+        call_throws(self.ctx, ['rc-service', service, 'start'])
+
+
 def create_packager(
     ctx: CephadmContext,
     stable: Optional[str] = None,
@@ -609,6 +651,16 @@ def create_packager(
             distro=distro,
             distro_version=distro_version,
         )
+    elif distro in Apk.DISTRO_NAMES:
+        return Apk(
+            ctx,
+            stable=stable,
+            version=version,
+            branch=branch,
+            commit=commit,
+            distro=distro,
+            distro_version=distro_version,
+        )
     raise Error(
         'Distro %s version %s not supported' % (distro, distro_version)
     )
